jsjs, parameters vs arguments 
css, class selector vs id selector vs element selector specificity 
js, scope in programming is the trange in which an item , functions and variables have different rules that define their scope 
js, function hoisting 
js, closure is a combination of a fn object and a scope (set of variable bindings) in which the fn's variables are resolved 
js, lexical soping is fn execution using the varive scope tha was in effect when it was defined 
js, variable scope is a region o a programm scoped code in which a variable is defined,global, local, nested scope 
js, scope chain is a list or a chain objects that defines the variables thare in scope for the code 
js, variable resolution is the process by which js looks up the value of a variable x by traversing the scope chain, if x is not found a reference error 
js parameter is local to fn 
js, fn properties: arguments[], callee, caller, constructor, length, prototype 
js, how to call an anonymous fn : arguments.callee 
js, what does constructor.prototype do 
js, Object.getPrototypeOf(obj) 
js, myfunc.length is the number of parameters in the fn declaration
js, arguments.length, is the number of passed arguments

js, event bubbling (target to root, phase 3), event capturing (root to target, phase 1),reaching target (phase 2) 
js, create object methods: {}, new Object, Object.create 
js, inherited properties come from prototype, own properties are defined by object 
js, check own properties -
js, check for own properties: for (var prop in obj) if (typeof obj[prop] !== 'function') { console.log(prop) } 
js, add or delete property on object: delete obj.prop or obj.prop = 2 
js, var string = JSON.stringyfy(obj), var obj = JSON.parse(jsonstring) 
js, get or set function to create a property on an object: { get area: function() {} set area(a) {} } 
quizapp in oo style, https://github.com/moteutsch/Practical-OOP.git 
